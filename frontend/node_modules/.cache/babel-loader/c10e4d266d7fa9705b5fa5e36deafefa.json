{"ast":null,"code":"var _jsxFileName = \"/Users/won-yungyeong/WEEKEND/abc/weekend_app/frontend/src/main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios'; // import { useHistory } from 'react-router-dom';\n\nimport { Avatar, Button, CssBaseline, TextField, Link, FormControl, FormControlLabel, Checkbox, FormHelperText, Grid, Box, Typography, Container } from '@mui/material/';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport styled from 'styled-components';\nimport Chat from './Chat';\nimport Sidebar from './Sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\nconst FormHelperTexts = styled(FormHelperText)`\n  width: 100%;\n  padding-left: 16px;\n  font-weight: 700;\n  color: #d32f2f;\n`;\nexport default function Login() {\n  _s();\n\n  const [emailError, setEmailError] = useState('');\n  const [passwordState, setPasswordState] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [LoginError, setLoginError] = useState(''); // const history = useHistory();\n\n  const onhandlePost = async data => {\n    const {\n      email,\n      password\n    } = data;\n    const postData = {\n      email,\n      password\n    };\n    console.log('data:', data);\n    await axios.post('http://localhost:5000/user/login', postData).then(function (response) {\n      console.log(response, 'logged in successfully'); // history.push('/login');\n    }).catch(function (err) {\n      console.log(err);\n      setLoginError('failed to log in. check it again');\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    const joinData = {\n      email: data.get('email'),\n      password: data.get('password')\n    };\n    const {\n      email,\n      password\n    } = joinData;\n    const emailRegex = /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n    if (!emailRegex.test(email)) setEmailError('check your email');else setEmailError('');\n    const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,25}$/;\n    if (!passwordRegex.test(password)) setPasswordState('make your password with the combination of numbers and alpabets and special characters more than 8 letters');else setPasswordState('');\n\n    if (emailRegex.test(email) && passwordRegex.test(password)) {\n      onhandlePost(joinData);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__body\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"Az7/Cj/HyKza3IInvZGoZiHcbFk=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/won-yungyeong/WEEKEND/abc/weekend_app/frontend/src/main.js"],"names":["React","useState","axios","Avatar","Button","CssBaseline","TextField","Link","FormControl","FormControlLabel","Checkbox","FormHelperText","Grid","Box","Typography","Container","LockOutlinedIcon","createTheme","ThemeProvider","styled","Chat","Sidebar","theme","FormHelperTexts","Login","emailError","setEmailError","passwordState","setPasswordState","passwordError","setPasswordError","LoginError","setLoginError","onhandlePost","data","email","password","postData","console","log","post","then","response","catch","err","handleSubmit","e","preventDefault","FormData","currentTarget","joinData","get","emailRegex","test","passwordRegex"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n// import { useHistory } from 'react-router-dom';\n\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Link,\n  FormControl,\n  FormControlLabel,\n  Checkbox,\n  FormHelperText,\n  Grid,\n  Box,\n  Typography,\n  Container,\n} from '@mui/material/';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport styled from 'styled-components';\n\nimport Chat from './Chat';\nimport Sidebar from './Sidebar';\n\nconst theme = createTheme();\n\nconst FormHelperTexts = styled(FormHelperText)`\n  width: 100%;\n  padding-left: 16px;\n  font-weight: 700;\n  color: #d32f2f;\n`;\n\n\nexport default function Login() {\n\nconst [emailError, setEmailError] = useState('');\nconst [passwordState, setPasswordState] = useState('');\nconst [passwordError, setPasswordError] = useState('');\nconst [LoginError, setLoginError] = useState('');\n// const history = useHistory();\n\n\nconst onhandlePost = async (data) => {\n  const { email, password } = data;\n  const postData = { email, password};\n\n  console.log('data:',data);\n\n\n  await axios\n    .post('http://localhost:5000/user/login', postData)\n    .then(function (response) {\n      console.log(response, 'logged in successfully');\n      // history.push('/login');\n      \n    })\n    .catch(function (err) {\n      console.log(err);\n      setLoginError('failed to log in. check it again');\n    });\n};\n\nconst handleSubmit = (e) => {\n    e.preventDefault();\n\n    const data = new FormData(e.currentTarget);\n\n    const joinData = {\n        email: data.get('email'),\n        password: data.get('password')\n    };\n    \n    const { email, password } = joinData;\n\n    const emailRegex = /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n\n    if(!emailRegex.test(email))\n        setEmailError('check your email');\n    else\n        setEmailError('');\n\n    const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,25}$/;\n    if(!passwordRegex.test(password))\n        setPasswordState('make your password with the combination of numbers and alpabets and special characters more than 8 letters')\n    else\n        setPasswordState('');\n\n\n      \n    if(\n      emailRegex.test(email) &&\n      passwordRegex.test(password)\n    ) {\n      onhandlePost(joinData);\n    }\n};\n\n\n  return (\n    <div className=\"App\">\n        <div className=\"app__body\">\n          <Sidebar />\n          <Chat />\n        </div>\n      </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}